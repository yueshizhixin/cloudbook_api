<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alm.book.mapper.BookChapterMapper">
    <resultMap id="BaseResultMap" type="com.alm.book.po.BookChapter">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="bookId" jdbcType="INTEGER" property="bookId"/>
        <result column="bookName" jdbcType="VARCHAR" property="bookName"/>
        <result column="lineId" jdbcType="INTEGER" property="lineId"/>
        <result column="lineName" jdbcType="VARCHAR" property="lineName"/>
        <result column="titleId" jdbcType="INTEGER" property="titleId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.alm.book.po.BookChapter">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, bookId, bookName, lineId, lineName, titleId, title, createTime, updateTime
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.alm.book.po.BookChapterExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_book_chapter
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.alm.book.po.BookChapterExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_book_chapter
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_book_chapter
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_book_chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.alm.book.po.BookChapterExample">
        delete from t_book_chapter
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.alm.book.po.BookChapter">
    insert into t_book_chapter (id, bookId, bookName, 
      lineId, lineName, titleId, 
      title, createTime, updateTime, 
      content)
    values (#{id,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, 
      #{lineId,jdbcType=INTEGER}, #{lineName,jdbcType=VARCHAR}, #{titleId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.alm.book.po.BookChapter">
        insert into t_book_chapter
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookId != null">
                bookId,
            </if>
            <if test="bookName != null">
                bookName,
            </if>
            <if test="lineId != null">
                lineId,
            </if>
            <if test="lineName != null">
                lineName,
            </if>
            <if test="titleId != null">
                titleId,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookId != null">
                #{bookId,jdbcType=INTEGER},
            </if>
            <if test="bookName != null">
                #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="lineId != null">
                #{lineId,jdbcType=INTEGER},
            </if>
            <if test="lineName != null">
                #{lineName,jdbcType=VARCHAR},
            </if>
            <if test="titleId != null">
                #{titleId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.alm.book.po.BookChapterExample" resultType="java.lang.Long">
        select count(*) from t_book_chapter
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_book_chapter
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.bookId != null">
                bookId = #{record.bookId,jdbcType=INTEGER},
            </if>
            <if test="record.bookName != null">
                bookName = #{record.bookName,jdbcType=VARCHAR},
            </if>
            <if test="record.lineId != null">
                lineId = #{record.lineId,jdbcType=INTEGER},
            </if>
            <if test="record.lineName != null">
                lineName = #{record.lineName,jdbcType=VARCHAR},
            </if>
            <if test="record.titleId != null">
                titleId = #{record.titleId,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                createTime = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_book_chapter
        set id = #{record.id,jdbcType=INTEGER},
        bookId = #{record.bookId,jdbcType=INTEGER},
        bookName = #{record.bookName,jdbcType=VARCHAR},
        lineId = #{record.lineId,jdbcType=INTEGER},
        lineName = #{record.lineName,jdbcType=VARCHAR},
        titleId = #{record.titleId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_book_chapter
        set id = #{record.id,jdbcType=INTEGER},
        bookId = #{record.bookId,jdbcType=INTEGER},
        bookName = #{record.bookName,jdbcType=VARCHAR},
        lineId = #{record.lineId,jdbcType=INTEGER},
        lineName = #{record.lineName,jdbcType=VARCHAR},
        titleId = #{record.titleId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.alm.book.po.BookChapter">
        update t_book_chapter
        <set>
            <if test="bookId != null">
                bookId = #{bookId,jdbcType=INTEGER},
            </if>
            <if test="bookName != null">
                bookName = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="lineId != null">
                lineId = #{lineId,jdbcType=INTEGER},
            </if>
            <if test="lineName != null">
                lineName = #{lineName,jdbcType=VARCHAR},
            </if>
            <if test="titleId != null">
                titleId = #{titleId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.alm.book.po.BookChapter">
    update t_book_chapter
    set bookId = #{bookId,jdbcType=INTEGER},
      bookName = #{bookName,jdbcType=VARCHAR},
      lineId = #{lineId,jdbcType=INTEGER},
      lineName = #{lineName,jdbcType=VARCHAR},
      titleId = #{titleId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.alm.book.po.BookChapter">
    update t_book_chapter
    set bookId = #{bookId,jdbcType=INTEGER},
      bookName = #{bookName,jdbcType=VARCHAR},
      lineId = #{lineId,jdbcType=INTEGER},
      lineName = #{lineName,jdbcType=VARCHAR},
      titleId = #{titleId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>