<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alm.book.mapper.BookShelfMapper">
  <resultMap id="BaseResultMap" type="com.alm.book.po.BookShelf">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="bookId" jdbcType="INTEGER" property="bookId" />
    <result column="chapterId" jdbcType="INTEGER" property="chapterId" />
    <result column="chapterNo" jdbcType="INTEGER" property="chapterNo" />
    <result column="pageNo" jdbcType="INTEGER" property="pageNo" />
    <result column="readDuration" jdbcType="INTEGER" property="readDuration" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, bookId, chapterId, chapterNo, pageNo, readDuration, createTime, updateTime
  </sql>
  <select id="selectByExample" parameterType="com.alm.book.po.BookShelfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_book_shelf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_book_shelf
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_book_shelf
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.alm.book.po.BookShelfExample">
    delete from t_book_shelf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alm.book.po.BookShelf">
    insert into t_book_shelf (id, userId, bookId, 
      chapterId, chapterNo, pageNo, 
      readDuration, createTime, updateTime
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{chapterId,jdbcType=INTEGER}, #{chapterNo,jdbcType=INTEGER}, #{pageNo,jdbcType=INTEGER}, 
      #{readDuration,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.alm.book.po.BookShelf">
    insert into t_book_shelf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="bookId != null">
        bookId,
      </if>
      <if test="chapterId != null">
        chapterId,
      </if>
      <if test="chapterNo != null">
        chapterNo,
      </if>
      <if test="pageNo != null">
        pageNo,
      </if>
      <if test="readDuration != null">
        readDuration,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="chapterNo != null">
        #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="pageNo != null">
        #{pageNo,jdbcType=INTEGER},
      </if>
      <if test="readDuration != null">
        #{readDuration,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alm.book.po.BookShelfExample" resultType="java.lang.Long">
    select count(*) from t_book_shelf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_book_shelf
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null">
        bookId = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterId != null">
        chapterId = #{record.chapterId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterNo != null">
        chapterNo = #{record.chapterNo,jdbcType=INTEGER},
      </if>
      <if test="record.pageNo != null">
        pageNo = #{record.pageNo,jdbcType=INTEGER},
      </if>
      <if test="record.readDuration != null">
        readDuration = #{record.readDuration,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_book_shelf
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      bookId = #{record.bookId,jdbcType=INTEGER},
      chapterId = #{record.chapterId,jdbcType=INTEGER},
      chapterNo = #{record.chapterNo,jdbcType=INTEGER},
      pageNo = #{record.pageNo,jdbcType=INTEGER},
      readDuration = #{record.readDuration,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alm.book.po.BookShelf">
    update t_book_shelf
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        bookId = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        chapterId = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="chapterNo != null">
        chapterNo = #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="pageNo != null">
        pageNo = #{pageNo,jdbcType=INTEGER},
      </if>
      <if test="readDuration != null">
        readDuration = #{readDuration,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alm.book.po.BookShelf">
    update t_book_shelf
    set userId = #{userId,jdbcType=INTEGER},
      bookId = #{bookId,jdbcType=INTEGER},
      chapterId = #{chapterId,jdbcType=INTEGER},
      chapterNo = #{chapterNo,jdbcType=INTEGER},
      pageNo = #{pageNo,jdbcType=INTEGER},
      readDuration = #{readDuration,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>